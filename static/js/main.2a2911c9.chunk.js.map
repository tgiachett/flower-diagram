{"version":3,"sources":["components/Diagram/Svg/Group/Group.js","components/Diagram/Svg/Group/GroupContainer.js","components/Diagram/Svg/Svg.js","components/Diagram/Svg/SvgJsonContainer.js","components/Diagram/Diagram.js","App.js","registerServiceWorker.js","index.js"],"names":["Group","react_default","a","createElement","fill","this","props","i","key","id","style","filter","concat","display","fillOpacity","onMouseEnter","onMouseLeave","thisGroup","children","map","p","pi","attributes","d","React","Component","GroupContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reveal","setState","fillOpacityState","active","blur","hide","unblur","state","Svg_Group_Group","focus","Svg","xmlns","viewBox","width","height","preserveAspectRatio","version","in","stdDeviation","groups","g","Group_GroupContainer","SvgJsonContainer","globalFocus","Diagram_Svg_Svg","data","wholeJson","pathStyleState","require","Profile","className","marginTop","Svg_SvgJsonContainer","marginLeft","marginRight","App","Diagram","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2a2911c9.chunk.js","sourcesContent":["import React from 'react';\n\nclass Group extends React.Component {  \n\n    render() {\n\n    return (\n\n\t<g\n\tfill={this.props.fill}\n\ti={this.props.key}\n\tid={this.props.id}\n\tstyle={{filter:`url(#${this.props.filter})`}}\n\tdisplay={this.props.display}\n\tfillOpacity={this.props.fillOpacity}\n\tonMouseEnter={this.props.onMouseEnter}\n\tonMouseLeave={this.props.onMouseLeave}>\n\n\t{this.props.thisGroup.children.map((p, pi) => {\n\t\t\treturn (\n\t\t\t    <path\n\t\t\t    key={pi}\n\t\t\t    id={p.attributes.id}\n\t\t\t    d={p.attributes.d}\n\t\t\t    fill={p.attributes.fill}\n\t\t\t    />\n\t\t\t)})}\n\t\t\t\n\t</g>\n\t    \n    \n\n    )}\n}\n\n\t\n\n    export default Group ;\n","import React from 'react';\nimport Group from './Group'\n\n\nclass GroupContainer extends React.Component {\n\n constructor(props) {\n\tsuper(props);\n     this.state = {\n\t fillOpacityState: 0,\n\t active: 0\n\n\t\t  };\n\n }\n    \n reveal = () => {\n\t\n     this.setState({\n\t fillOpacityState: 1,\n\t active: 1\n     });\n     this.props.blur()\n\n    };\n\n hide = () => {\n\t\n     this.setState({fillOpacityState: 0});\n     this.props.unblur()\n    };\n\n     \n render() {\n\n    return (\n\n\t<Group\n\tfill={this.props.fill}\n\tfilter={(this.state.active === 1) ? 'noFilter' : this.props.filter}\n\tfocus={this.state.active}\n\tthisGroup={this.props.thisGroup}\n\tkey={this.props.key} id={this.props.id}\n\tdisplay={this.props.display}\n\tonMouseLeave={(this.props.thisGroup.attributes.id === \"g65\") ? null : this.hide}\n\tonMouseEnter={(this.props.thisGroup.attributes.id === \"g65\") ? null : this.reveal}\n\tfillOpacity={(this.props.thisGroup.attributes.id === \"g65\") ? 1 : this.state.fillOpacityState}>\n\t\t\t\n\t</Group>\n\t    \n    \n\n    )}\n}\n\n\t\n\n    export default GroupContainer ;\n","import React from 'react';\r\nimport GroupContainer from './Group/GroupContainer';\r\n\r\nclass Svg extends React.Component {\r\n\r\n\r\n    \r\n    \r\n    render() {\r\n\r\n\tconst unFocusId = \"unFocus\"\r\n    return (\r\n\r\n    <svg\r\n    xmlns={this.props.xmlns}\r\n    viewBox={this.props.viewBox}\r\n    width={this.props.width}\r\n    height={this.props.height}\r\n    id={this.props.id}\r\n    style={this.props.style}\r\n    preserveAspectRatio={this.props.preserveAspectRatio}\r\n    version=\"1.1\">\r\n\r\n\t    <filter id={unFocusId}>\r\n    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"15\" />\r\n\t    </filter>\r\n\t    <filter id=\"noFilter\">\r\n    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"0\" />\r\n\t    </filter>\r\n\r\n\r\n\t{this.props.groups.map((g, i) => {\r\n\t    return (\r\n\t\t<GroupContainer\r\n\t\tfill={g.attributes.fill}\r\n\t\tfilter={this.props.filter}\r\n\t\tblur={this.props.blur}\r\n\t\tunblur={this.props.unblur}\r\n\t\tthisGroup={g}\r\n\t\tkey={i}\r\n\t\tid={g.attributes.id}\r\n\t\tdisplay={g.attributes.display}\r\n\t\t/>\r\n\t\t    \r\n\t    )})}\r\n    </svg>\r\n\r\n    )}\r\n}\r\n\r\n\t\r\n\r\n    export default Svg ;\r\n","import React from 'react';\r\nimport Svg from './Svg';\r\n\r\nclass SvgJsonContainer extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n\tglobalFocus: \"noFilter\"\r\n    }\r\n\r\n  }\r\n\r\n     blur = () => {\r\n\t     this.setState({ globalFocus: \"unFocus\"})\r\n}\r\n\r\nunblur = () => {\r\n    this.setState({globalFocus: \"noFilter\"})\r\n}\r\n \r\n  render() {\r\n    \r\n     \r\n    return (\r\n\r\n      <Svg \r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox={this.props.viewBox}\r\n      width={this.props.width}\r\n      height={this.props.height}\r\n      id={this.props.id}\r\n      groups={this.props.data.children}\r\n      wholeJson={this.props.data}\r\n      pathStyleState={this.state}\r\n      style={this.props.style}\r\n      preserveAspectRatio={this.props.preserveAspectRatio}\r\n      blur={this.blur}\r\n      unblur={this.unblur}\r\n      filter={this.state.globalFocus}\r\n      />\r\n     \r\n\r\n    )}\r\n\r\n  }\r\n\r\n    export default SvgJsonContainer ;\r\n","import \"./breakpoints.css\";\r\nimport React from 'react';\r\nimport SvgJsonContainer from './Svg/SvgJsonContainer';\r\nconst data = require('./Gold_Rayed_Lily_of_Japan_Trace_Full_new_version_optimized_afterEffects2_withHighlightsMadeTranslusent.json');\r\n\r\n\r\nclass Profile extends React.Component {\r\n\r\nrender() {\r\n  return (\r\n\t  <div className='container' style={{marginTop:'1vh'}}>\r\n        <div >\r\n          <SvgJsonContainer className=\"imageContainer\" viewBox=\"0 0 1973 3200\" width=\"493\" height=\"800\"  preserveAspectRatio=\"xMidYMid meet\" style={{display: 'block', marginLeft: 'auto', marginRight: 'auto' }}   data={data} />\r\n        </div>  \r\n        \r\n      </div>\r\n    \r\n  );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n// import './App.css';\r\nimport Profile from './components/Diagram/Diagram'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Profile />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}